diff -ru mutt-1.5.20/PATCHES mutt-date_conditional/PATCHES
--- mutt-1.5.20/PATCHES	2010-07-12 20:03:34.744592581 -0400
+++ mutt-date_conditional/PATCHES	2010-07-12 20:04:59.477690672 -0400
@@ -0,0 +1 @@
+patch-1.5.0.ats.date_conditional.1
diff -ru mutt-1.5.20/doc/manual.xml.head mutt-date_conditional/doc/manual.xml.head
--- mutt-1.5.20/doc/manual.xml.head	2010-07-12 20:03:34.747927146 -0400
+++ mutt-date_conditional/doc/manual.xml.head	2010-07-12 20:48:38.176853253 -0400
@@ -4410,6 +4410,26 @@
 
 </sect2>
 
+<sect2 id="formatstrings-conditional-dates">
+<title>Conditional Dates</title>
+<para>
+This patch allows the format of dates in the index to vary based on how recent
+the message is. This is especially useful in combination with David Champion's
+patch to allow if-else sequences to be nested.
+</para>
+
+<para>
+For example, using <literal>%?[1y?%\?[1d\?%[%H:%M]\&amp;%[%m/%d]\?&amp;%[%y.%m]?
+</literal> for the date in the index format will produce a display like:
+
+<screen>
+   1   F 97.12 To mutt-users@c (   40) Re: rfc934 compliance
+   2   F 10/02 To Mutt Develop (   15) Re: tiny mkstemp patch
+   3   L 12:17 Michael Elkins  (   16) Re: Replying with the appropriate address
+</screen>
+</para>
+</sect2>
+
 </sect1>
 
 </chapter>
diff -ru mutt-1.5.20/hdrline.c mutt-date_conditional/hdrline.c
--- mutt-1.5.20/hdrline.c	2010-07-12 20:03:34.711258878 -0400
+++ mutt-date_conditional/hdrline.c	2010-07-12 20:04:59.480865237 -0400
@@ -363,6 +363,53 @@
 	const char *cp;
 	struct tm *tm; 
 	time_t T;
+	int i = 0, invert = 0;
+
+	if (optional && (op == '[' || op == '(')) {
+	  char *is;
+	  T = time(NULL);
+	  T -= (op == '(') ? hdr->received : hdr->date_sent;
+
+	  is = (char *)prefix;
+	  if( *is == '>' ) {
+	    invert = 1;
+	    ++is;
+	  }
+
+	  while( *is && *is != '?' ) {
+	    int t = strtol (is, &is, 10);
+	    switch (*(is++)) {
+	      case '?':
+		break;
+	      case 'y':
+		t *= 365 * 24 * 60 * 60;
+		break;
+	      case 'M':
+		t *= 30 * 24 * 60 * 60;
+		break;
+	      case 'w':
+		t *= 7 * 24 * 60 * 60;
+		break;
+	      case 'd':
+		t *= 24 * 60 * 60;
+		break;
+	      case 'h':
+		t *= 60 * 60;
+		break;
+	      case 'm':
+		t *= 60;
+		break;
+	    }
+	    i += t;
+	  }
+
+	  if (i < 0)
+	    i *= -1;
+
+	  if( (T > i || T < -1*i) ^ invert )
+	    optional = 0;
+	  break;
+	}
 
 	p = dest;
 
diff -ru mutt-1.5.20/muttlib.c mutt-date_conditional/muttlib.c
--- mutt-1.5.20/muttlib.c	2010-07-12 20:03:34.751264525 -0400
+++ mutt-date_conditional/muttlib.c	2010-07-12 20:04:59.477690672 -0400
@@ -1172,7 +1172,16 @@
       if (*src == '?')
       {
 	flags |= M_FORMAT_OPTIONAL;
-	src++;
+	ch = *(++src); /* save the character to switch on */
+	cp = prefix;
+	++src;
+	count = 0;
+	while (count < sizeof (prefix) && *src != '?')
+	{
+	  *cp++ = *src++;
+	  count++;
+	}
+	*cp = 0;
       }
       else
       {
@@ -1188,12 +1197,12 @@
 	  count++;
 	}
 	*cp = 0;
-      }
 
-      if (!*src)
-	break; /* bad format */
+	if (!*src)
+	  break; /* bad format */
 
-      ch = *src++; /* save the character to switch on */
+	ch = *src++; /* save the character to switch on */
+      }
 
       if (flags & M_FORMAT_OPTIONAL)
       {
